name: Chocolotine
on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'
 
env:
  MIRROR_URL: ${{ secrets.git@github.com:EpitechPGEPromo2029/B-DOP-200-BDX-2-1-chocolatine-salah-eddine.ghellab.git}}
  EXECUTABLES: "my_printf"
 
jobs:
  check_repository:
    runs-on: ubuntu-latest
    steps:
      - name: Check if we're in the mirror repository
        id: check_mirror
        run: |
          if [ "$GITHUB_REPOSITORY" == "${{ secrets.MIRROR_REPO_NAME }}" ]; then
            echo "We are in the mirror repository, skipping all jobs."
            exit 0
          fi
    outputs:
      skip: ${{ steps.check_mirror.outputs.skip }}
 
  check_coding_style:
    name: Check Coding Style
    runs-on: ubuntu-latest
    needs: check_repository
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run coding style check
        run: check.sh $(pwd) $(pwd)
      - name: Display coding style errors
        run: |
          if [ -f coding-style-reports.log ]; then
            cat coding-style-reports.log
            while IFS= read -r line; do
              echo "::error file=$(echo $line | cut -d: -f1),line=$(echo $line | cut -d: -f2),title=Coding Style Error::$(echo $line | cut -d: -f3-)"
            done < coding-style-reports.log
            exit 0
          fi
 
  check_program_compilation:
    name: Check Program Compilation
    runs-on: ubuntu-latest
    needs: check_coding_style
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Compile program
        timeout-minutes: 2
        run: make
      - name: Clean compilation
        run: make clean
      - name: Verify executables
        run: |
          IFS=',' read -ra EXECS <<< "$EXECUTABLES"
          for exec in "${EXECS[@]}"; do
            if [ ! -x "$exec" ]; then
              echo "::error title=Missing Executable::Executable '$exec' not found or not executable"
              exit 0
            fi
          done
 
  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: check_program_compilation
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run tests
        timeout-minutes: 2
        run: make tests_run
 
  push_to_mirror:
    name: Push to Mirror Repository
    runs-on: ubuntu-latest
    needs: run_tests
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Push to Mirror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: "${{ env.git@github.com:EpitechPGEPromo2029/B-DOP-200-BDX-2-1-chocolatine-salah-eddine.ghellab.git }}"
          ssh_private_key: "${{ secrets.GIT_SSH_PRIVATE_KEY }}"

