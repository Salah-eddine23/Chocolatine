name: Chocolatine
 
on:
   push:
     branches-ignore:
       - 'ga-ignore-**'
   pull_request:
     branches-ignore:
       - 'ga-ignore-**'
 
env:
   MIRROR_URL: Salah-eddine23/Chocolatine.git
   EXECUTABLES: my_printf
 
jobs:
  check_coding_style:
     name: Checking coding-style
     runs-on: ubuntu-latest
 
    container:
       image: ghcr.io/epitech/coding-style-checker:latest
     if: ${{ github.repository != 'Salah-eddine23/Chocolatine.git' }}
 
    steps:
 
      - name: Checkout Repository
         uses: actions/checkout@v4
 
      - name: Check Coding Style
         run: check.sh $(pwd) $(pwd)
 
      - name: Report banana result
         run: |
           NB_ERROR=$(cat coding-style-reports.log | wc -l)
           if [ $NB_ERROR -gt 0 ]; then
             ERRORS=$(cat coding-style-reports.log);
             echo "Banana found $NB_ERROR error(s)"
             echo "$ERRORS"
             while IFS= read -r line || [-n "$line"]; do
               echo "::error::$line"
             done < coding-style-reports.log
             exit 1
           fi
             echo "Everything is good ! Keep on coding !"
             exit 0
 
  check_program_compilation:
     name: Checking program compilation
     runs-on: ubuntu-latest
     needs: [check_coding_style]
 
    container:
       image: ghcr.io/epitech/coding-style-checker:latest
 
    steps:
       - name: Checkout repository
         uses: actions/checkout@v4
 
      - name: Compile project
         run: make
         timeout-minutes: 2
 
      - name: Check executable files
         run: |
           if [ ! -f "$EXECUTABLES" ]; then
             echo "::error::Error:file $EXECTABLES not found"
             exit 1
           fi
       - name: Clean project
         run: make clean
 
  run_tests:
     name: Running tests
     runs-on: ubuntu-latest
 
    container:
       image: epitechcontent/epitest-docker:latest
     needs: [check_program_compilation]
     if: ${{ success() && github.repository != 'Salah-eddine23/Chocolatine' }}
 
    steps:
       - name: Checkout repository
         uses: actions/checkout@v4
 
      - name: Run tests
         run: make tests_run
         timeout-minutes: 2
 
  push_to_mirror:
     name: Pushing to mirror repository
     runs-on: ubuntu-latest
 
    needs: [run_tests]
     if: github.event_name == 'push'
 
    steps:
       - name: Checkout repository
         uses: actions/checkout@v4
         with:
           fetch-depth: 0
 
      - name: Push to mirror
         uses: pixta-dev/repository-mirroring-action@v1
         with:
           target_repo_url: ${{ env.MIRROR_URL }}
           ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
 
  from_source:
     name: Mirror from source
     runs-on: ubuntu-latest
 
    needs: [run_tests]
 
    steps:
       - name: Checkout repository
         uses: actions/checkout@v4
         with:
           fetch-depth: 0
 
      - name: src chocolatine
         uses: pixta-dev/repository-mirroring-action@v1
         with:
           target_repo_url: git@github.com:Salah-eddine23/Chocolatine.git
           ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
